{
  "version": 3,
  "sources": ["../../node_modules/regenerator-runtime/runtime.js", "../../src/index.ts", "../../src/react-native-webview-controller.tsx", "../../src/react-native-sdk-base.ts"],
  "sourcesContent": ["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "/*\n  eslint-disable\n\n  global-require,\n  @typescript-eslint/no-var-requires\n */\n\n/* istanbul ignore file */\n\nimport 'regenerator-runtime/runtime';\n\nimport { createSDK, InstanceWithExtensions, MagicSDKExtensionsOption } from '@magic-sdk/provider';\nimport * as processPolyfill from 'process';\nimport localForage from 'localforage';\nimport { URL as URLPolyfill, URLSearchParams as URLSearchParamsPolyfill } from 'whatwg-url';\nimport { Buffer } from 'buffer';\nimport * as _ from 'lodash';\nimport * as Application from 'expo-application';\nimport { driverWithoutSerialization } from '@aveq-research/localforage-asyncstorage-driver';\nimport * as memoryDriver from 'localforage-driver-memory';\nimport { ReactNativeWebViewController } from './react-native-webview-controller';\nimport { SDKBaseReactNative } from './react-native-sdk-base';\n\n// Web3 assumes a browser context, so we need\n// to provide `btoa` and `atob` shims.\n\n// We expect `global.process` to be a Node Process for web3.js usage\n// so we replace it here.\nglobal.process = _.merge(global.process, processPolyfill);\n\n(global.process as any).browser = false;\n\n// WHATWG URL requires global `Buffer` access.\nglobal.Buffer = Buffer;\n\n// Setup global WHATWG URL polyfills\nglobal.URL = URLPolyfill as any;\nglobal.URLSearchParams = URLSearchParamsPolyfill as any;\n\n/* istanbul ignore next */\nglobal.btoa = (str) => Buffer.from(str, 'binary').toString('base64');\n/* istanbul ignore next */\nglobal.atob = (b64Encoded) => Buffer.from(b64Encoded, 'base64').toString('binary');\n\nexport * from '@magic-sdk/commons';\n\nexport const Magic = createSDK(SDKBaseReactNative, {\n  platform: 'react-native',\n  sdkName: '@magic-sdk/react-native',\n  version: process.env.REACT_NATIVE_VERSION!,\n  bundleId: Application.applicationId,\n  defaultEndpoint: 'https://box.magic.link/',\n  ViewController: ReactNativeWebViewController,\n  configureStorage: /* istanbul ignore next */ async () => {\n    const lf = localForage.createInstance({\n      name: 'MagicAuthLocalStorageDB',\n      storeName: 'MagicAuthLocalStorage',\n    });\n\n    const driver = driverWithoutSerialization();\n    await Promise.all([lf.defineDriver(driver), lf.defineDriver(memoryDriver)]);\n    await lf.setDriver([driver._driver, memoryDriver._driver]);\n\n    return lf;\n  },\n});\n\nexport type Magic<T extends MagicSDKExtensionsOption<any> = MagicSDKExtensionsOption> = InstanceWithExtensions<\n  SDKBaseReactNative,\n  T\n>;\n", "import React, { useState, useCallback, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport { ViewController, createModalNotReadyError } from '@magic-sdk/provider';\nimport { MagicMessageEvent } from '@magic-sdk/types';\nimport { isTypedArray } from 'lodash';\nimport Global = NodeJS.Global;\n\nconst MAGIC_PAYLOAD_FLAG_TYPED_ARRAY = 'MAGIC_PAYLOAD_FLAG_TYPED_ARRAY';\n\n/**\n * Builds the Magic `<WebView>` overlay styles. These base styles enable\n * `<WebView>` UI to render above all other DOM content.\n */\nfunction createWebViewStyles() {\n  return StyleSheet.create({\n    'magic-webview': {\n      flex: 1,\n      backgroundColor: 'transparent',\n    },\n\n    'webview-container': {\n      flex: 1,\n      width: '100%',\n      backgroundColor: 'transparent',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n\n    show: {\n      zIndex: 10000,\n      elevation: 10000,\n    },\n\n    hide: {\n      zIndex: -10000,\n      elevation: 0,\n    },\n  });\n}\n\n/**\n * Overloads React Native's `<View>` with helper methods we require to hide/show\n * the rendered `<WebView>`.\n */\ninterface ViewWrapper extends View {\n  showOverlay: () => void;\n  hideOverlay: () => void;\n}\n\n/**\n * View controller for the Magic `<WebView>` overlay.\n */\nexport class ReactNativeWebViewController extends ViewController {\n  private webView!: WebView | null;\n  private container!: ViewWrapper | null;\n  private styles: any;\n\n  protected init() {\n    this.webView = null;\n    this.container = null;\n    this.styles = createWebViewStyles();\n  }\n\n  /**\n   * Renders a React Native `<WebView>` with built-in message handling to and\n   * from the Magic `<iframe>` context.\n   */\n  // Validating this logic requires lots of React-specific boilerplate. We will\n  // revisit this method for unit testing in the future. For now, manual testing\n  // is sufficient (this logic is stable right now and not expected to change in\n  // the forseeable future).\n  /* istanbul ignore next */\n  public Relayer: React.FC = () => {\n    const [show, setShow] = useState(false);\n\n    /**\n     * Saves a reference to the underlying `<WebView>` node so we can interact\n     * with incoming messages.\n     */\n    const webViewRef = useCallback((webView: any): void => {\n      this.webView = webView;\n    }, []);\n\n    /**\n     * Saves a reference to the underlying `<View>` node so we can interact with\n     * display styles.\n     */\n    const containerRef = useCallback((view: any): void => {\n      this.container = {\n        ...view,\n        showOverlay,\n        hideOverlay,\n      };\n    }, []);\n\n    /**\n     * Show the Magic `<WebView>` overlay.\n     */\n    const showOverlay = useCallback(() => {\n      setShow(true);\n    }, []);\n\n    /**\n     * Hide the Magic `<WebView>` overlay.\n     */\n    const hideOverlay = useCallback(() => {\n      setShow(false);\n    }, []);\n\n    const containerStyles = useMemo(() => {\n      return [this.styles['webview-container'], show ? this.styles.show : this.styles.hide];\n    }, [show]);\n\n    const handleWebViewMessage = useCallback((event: any) => {\n      this.handleReactNativeWebViewMessage(event);\n    }, []);\n\n    return (\n      <View ref={containerRef} style={containerStyles}>\n        <WebView\n          ref={webViewRef}\n          source={{ uri: `${this.endpoint}/send/?params=${encodeURIComponent(this.parameters)}` }}\n          onMessage={handleWebViewMessage}\n          style={this.styles['magic-webview']}\n        />\n      </View>\n    );\n  };\n\n  /**\n   * Route incoming messages from a React Native `<WebView>`.\n   */\n  private handleReactNativeWebViewMessage(event: any) {\n    if (\n      event.nativeEvent &&\n      typeof event.nativeEvent.data === 'string' &&\n      /* Backward comaptible */\n      (event.nativeEvent.url === `${this.endpoint}/send/?params=${encodeURIComponent(this.parameters)}` ||\n        event.nativeEvent.url === `${this.endpoint}/send/?params=${this.parameters}`)\n    ) {\n      // Special parsing logic when dealing with TypedArray in the payload\n      // Such change is required as JSON.stringify will manipulate the object and cause exceptions during parsing\n      // The typed Array is stringified in Mgbox with a flag as notation.\n      const data: any = JSON.parse(event.nativeEvent.data, (key, value) => {\n        try {\n          if (value && typeof value === 'object' && value.flag && value.flag === 'MAGIC_PAYLOAD_FLAG_TYPED_ARRAY') {\n            // @ts-ignore\n            return new global[value.constructor as keyof Global](value.data.split(','));\n          }\n\n          // silently handles exception and return the original copy\n          // eslint-disable-next-line no-empty\n        } catch (e) {}\n        return value;\n      });\n\n      if (data && data.msgType && this.messageHandlers.size) {\n        // If the response object is undefined, we ensure it's at least an\n        // empty object before passing to the event listener.\n        /* eslint-disable-next-line no-param-reassign */\n        data.response = data.response ?? {};\n\n        // Reconstruct event from RN event\n        const magicEvent: MagicMessageEvent = { data } as MagicMessageEvent;\n        for (const handler of this.messageHandlers.values()) {\n          handler(magicEvent);\n        }\n      }\n    }\n  }\n\n  protected hideOverlay() {\n    if (this.container) this.container.hideOverlay();\n  }\n\n  protected showOverlay() {\n    if (this.container) this.container.showOverlay();\n  }\n\n  protected async _post(data: any) {\n    if (this.webView && (this.webView as any).postMessage) {\n      (this.webView as any).postMessage(\n        JSON.stringify(data, (key, value) => {\n          // parse Typed Array to Stringify object\n          if (isTypedArray(value)) {\n            return {\n              constructor: value.constructor.name,\n              data: value.toString(),\n              flag: MAGIC_PAYLOAD_FLAG_TYPED_ARRAY,\n            };\n          }\n          return value;\n        }),\n        this.endpoint,\n      );\n    } else {\n      throw createModalNotReadyError();\n    }\n  }\n}\n", "import { SDKBase } from '@magic-sdk/provider';\nimport { ReactNativeWebViewController } from './react-native-webview-controller';\n\nexport class SDKBaseReactNative extends SDKBase {\n  public get Relayer() {\n    return (this.overlay as ReactNativeWebViewController).Relayer;\n  }\n}\n"],
  "mappings": "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",
  "names": ["require_runtime", "__commonJSMin", "exports", "module", "runtime", "Op", "hasOwn", "undefined", "$Symbol", "iteratorSymbol", "asyncIteratorSymbol", "toStringTagSymbol", "define", "obj", "key", "value", "wrap", "innerFn", "outerFn", "self", "tryLocsList", "protoGenerator", "Generator", "generator", "context", "Context", "makeInvokeMethod", "tryCatch", "fn", "arg", "err", "GenStateSuspendedStart", "GenStateSuspendedYield", "GenStateExecuting", "GenStateCompleted", "ContinueSentinel", "GeneratorFunction", "GeneratorFunctionPrototype", "IteratorPrototype", "getProto", "NativeIteratorPrototype", "values", "Gp", "defineIteratorMethods", "prototype", "method", "genFun", "ctor", "AsyncIterator", "PromiseImpl", "invoke", "resolve", "reject", "record", "result", "unwrapped", "error", "previousPromise", "enqueue", "callInvokeWithMethodAndArg", "iter", "state", "doneResult", "delegate", "delegateResult", "maybeInvokeDelegate", "info", "pushTryEntry", "locs", "entry", "resetTryEntry", "object", "keys", "next", "iterable", "iteratorMethod", "i", "skipTempReset", "name", "rootEntry", "rootRecord", "exception", "handle", "loc", "caught", "hasCatch", "hasFinally", "type", "finallyEntry", "afterLoc", "finallyLoc", "tryLoc", "thrown", "resultName", "nextLoc", "import_runtime", "createSDK", "processPolyfill", "localForage", "URLPolyfill", "URLSearchParamsPolyfill", "Buffer", "_", "Application", "driverWithoutSerialization", "memoryDriver", "React", "useState", "useCallback", "useMemo", "StyleSheet", "View", "WebView", "ViewController", "createModalNotReadyError", "isTypedArray", "MAGIC_PAYLOAD_FLAG_TYPED_ARRAY", "createWebViewStyles", "StyleSheet", "ReactNativeWebViewController", "ViewController", "show", "setShow", "useState", "webViewRef", "useCallback", "webView", "containerRef", "view", "__spreadProps", "__spreadValues", "showOverlay", "hideOverlay", "containerStyles", "useMemo", "handleWebViewMessage", "event", "React", "View", "WebView", "_a", "data", "key", "value", "e", "magicEvent", "handler", "__async", "isTypedArray", "createModalNotReadyError", "SDKBase", "SDKBaseReactNative", "processPolyfill", "Buffer", "URLPolyfill", "URLSearchParamsPolyfill", "str", "b64Encoded", "Magic", "createSDK", "SDKBaseReactNative", "ReactNativeWebViewController", "__async", "lf", "localForage", "driver", "driverWithoutSerialization", "memoryDriver"]
}
