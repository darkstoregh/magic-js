{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import { Extension } from '@magic-sdk/commons';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport * as fcl from '@onflow/fcl';\nimport { FlowConfig } from './type';\n\nexport class FlowExtension extends Extension.Internal<'flow', any> {\n  name = 'flow' as const;\n  config: any = {};\n\n  constructor(public flowConfig: FlowConfig) {\n    super();\n\n    this.config = {\n      rpcUrl: flowConfig.rpcUrl,\n      chainType: 'FLOW',\n      network: flowConfig.network,\n    };\n  }\n\n  authorization = async (account: any = {}) => {\n    fcl.config().put('accessNode.api', this.config.rpcUrl);\n    const addr = await this.request({\n      id: 42,\n      jsonrpc: '2.0',\n      method: 'flow_getAccount',\n      params: {},\n    });\n    const keyId = 0;\n    let sequenceNum;\n    if (account.role.proposer) {\n      const response = await fcl.send([fcl.getAccount(addr)]);\n      const acct = await fcl.decode(response);\n      sequenceNum = acct.keys[keyId].sequenceNumber;\n    }\n\n    const signingFunction = async (data: any) => {\n      const signature = await this.request({\n        id: 42,\n        jsonrpc: '2.0',\n        method: 'flow_signTransaction',\n        params: {\n          message: data.message,\n        },\n      });\n\n      return {\n        addr,\n        keyId,\n        signature,\n      };\n    };\n\n    return {\n      ...account,\n      addr,\n      keyId,\n      signingFunction,\n      sequenceNum,\n    };\n  };\n}\n"],
  "mappings": "0nBAAA,OAAS,aAAAA,MAAiB,qBAI1B,UAAYC,MAAS,cAGd,IAAMC,EAAN,cAA4BC,EAAU,QAAsB,CAIjE,YAAmBC,EAAwB,CACzC,MAAM,EADW,gBAAAA,EAHnB,UAAO,OACP,YAAc,CAAC,EAYf,mBAAgB,IAA6BC,IAAAC,EAAA,SAAAD,GAAA,UAAtBE,EAAe,CAAC,EAAM,CACvC,SAAO,EAAE,IAAI,iBAAkB,KAAK,OAAO,MAAM,EACrD,IAAMC,EAAO,MAAM,KAAK,QAAQ,CAC9B,GAAI,GACJ,QAAS,MACT,OAAQ,kBACR,OAAQ,CAAC,CACX,CAAC,EACKC,EAAQ,EACVC,EACJ,GAAIH,EAAQ,KAAK,SAAU,CACzB,IAAMI,EAAW,MAAU,OAAK,CAAK,aAAWH,CAAI,CAAC,CAAC,EAEtDE,GADa,MAAU,SAAOC,CAAQ,GACnB,KAAKF,GAAO,cACjC,CAEA,IAAMG,EAAyBC,GAAcP,EAAA,sBAC3C,IAAMQ,EAAY,MAAM,KAAK,QAAQ,CACnC,GAAI,GACJ,QAAS,MACT,OAAQ,uBACR,OAAQ,CACN,QAASD,EAAK,OAChB,CACF,CAAC,EAED,MAAO,CACL,KAAAL,EACA,MAAAC,EACA,UAAAK,CACF,CACF,GAEA,OAAOC,EAAAC,EAAA,GACFT,GADE,CAEL,KAAAC,EACA,MAAAC,EACA,gBAAAG,EACA,YAAAF,CACF,EACF,GA/CE,KAAK,OAAS,CACZ,OAAQN,EAAW,OACnB,UAAW,OACX,QAASA,EAAW,OACtB,CACF,CA2CF",
  "names": ["Extension", "fcl", "FlowExtension", "Extension", "flowConfig", "_0", "__async", "account", "addr", "keyId", "sequenceNum", "response", "signingFunction", "data", "signature", "__spreadProps", "__spreadValues"]
}
